생성자에서 할당 시 오류가 나면 스택에 할당한 객체는 삭제된다.
그러나 힙에 할당된 객체는 소멸자가 호출되지 않아서
삭제가 되지 않으며 메모리 누수로 이어진다.

객체를 생성할 때 생성자 내부의 코드가 실행되기 전 객체를 위한 메모리가
먼저 메모리에 잡히고, 그 내용을 초기화하기 위해 생성자가 실행된다.

객체를 메모리에 할당하는 과정

스택 할당 생성자 정상작동
1. 스택에 객체 크기만큼 메모리가 할당됨
2. 생성자를 실행하여 객체를 초기화
3. 메인 함수로 리턴
4. 변수가 스코프에서 벗어나면 소멸자 호출.
5. 소멸자에서 추가적인 메모리 헤제
7. 스택에서 객체 삭제

스택 할당 생성자 오류
1. 스택에 객체 크키만큼 메모리 할당
2. 생성자에서 오류(제대로 초기화 안됨)
3. 소멸자가 호출되지는 않지만, 스택에서 객체 삭제

스택 할당 생성자 내부 힙 할당 정상 작동
1. 스택에 객체 크키만큼 메모리 할당
2. 생성자가 실행되며 힙에 메모리 할당 및 값 저장
3. 초기화 완료 객체가 호출했던 함수로 리턴
4. 객체가 스코프를 벗어날 때 소멸자 호출.
5. 소멸자에서 힙 영역 메모리 헤제
6. 스택에서 객체 삭제

스택 할당 생성자 내부 힙 할당 오류
1. 스택에 객체 크키만큼 메모리 할당
2. 힙에 메모리 영역 할당 후 변수 저장시 오류 발생
3. 오류 발생으로 인한 생성자 중단. 스택헤제로 객체는 헤제되나 소멸자가
호출되지 않아 힙헤 할당된 영역은 헤제되지 않음.


해결 방법

스마트 포인터로 자동 헤제
스택 할당 스마트 포인터 사용 생성자 내부 힙 할당 오류
1. 객체가 스택에 만들어질 때 스마트 포인터도 함께 삽입.
2. 생성자에서 스마트 포인터는 힙에 메모리 할당. 이후 예외 발생
3. 스택 헤제 발생.
스마트 포인터는 이미 하나의 완전한 객체로 소멸자가 호출되면서 힙에
할당한 메모리를 헤제.
객체의 소멸자가 호출되지 않지만 스마트 포인터가 메모리를 헤제하여
누수가 발생하지 않음.
